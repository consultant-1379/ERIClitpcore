## test_03_p_non_persist_task_depends_non_persist_task

## Description:
## Test that when a non-persisted task depends on a non-persisted task,
## both tasks will appear in subsequent plans in the expected dependency order

# Actions:
# 1.Create a plug-in that generates a non-persisted "ConfigTask"
# (i.e. task persist flag = False)
# that depends on a non-persisted task
# (i.e. task persist flag = False)
# 2.Create items that results in tasks being generated
# 3.Execute "create_plan"
# 4.Check that all tasks appear in the plan
# 5.Execute "run_plan"
# 6.Create items that generate tasks unrelated to
# previous item
# 7.Execute "create_plan"
# 8.Check that the non-persisted tasks appears in the plan

# 1.
add-plugins plugins/dummy_12781_plugin
add-extensions extensions/dummy_12781_extension
runLitpScript ../include/two_nodes.at

# 2.
litp create -p /software/services/one -t test_12781_tc03 -o name=test_12781_tc03
litp inherit -p /deployments/local/clusters/cluster1/nodes/node1/services/one -s /software/services/one
litp inherit -p /deployments/local/clusters/cluster1/nodes/node1/services/two -s /software/services/one

# 3.
litp create_plan

# 4.
assertConfigTask node1 one test_12781_tc03 /deployments/local/clusters/cluster1/nodes/node1/services/one
assertConfigTask node1 two test_12781_tc03 /deployments/local/clusters/cluster1/nodes/node1/services/two
assertPlanLength 1  # one phase in plan
assertPhaseLength 0 2  # that phase has 2 tasks

# 5.
litp run_plan
assertPlanState successful

# 6 - 7. Recreate plan (plugin returns exact same tasks)
litp create_plan

# 8. Both tasks are in the plan
assertConfigTask node1 one test_12781_tc03 /deployments/local/clusters/cluster1/nodes/node1/services/one
assertConfigTask node1 two test_12781_tc03 /deployments/local/clusters/cluster1/nodes/node1/services/two
assertPlanLength 1  # one phase in plan
assertPhaseLength 0 2  # that phase has 2 tasks

# Result:
# When the persist flag of a task is set to False,
# this task will appear in subsequent plans
