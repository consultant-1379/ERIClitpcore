# Test Case 01: Correct Tasks
## Description: Verify that the tasks generated in a plan using the command "litp create_plan --no-node-lock" are the same tasks generated using "litp create_plan" command(except for the actual node lock/unlock tasks)
# Pre-requisates: A LITP system with more than 1 node
## Step 1: Update model where lock/unlock tasks will be generated for both nodes
## Step 2: litp create_plan and store list of tasks
## Step 3: litp create_plan --no-lock-tasks and store tasks
# Verification 3: Verify that all the tasks generated in step 2 exist in the plan generated in step 3
## Step 4: litp remove_plan
## Step 5: litp create_plan --no-lock-tasks and store tasks
# Verification 5: Verify that the plan generated in step 3 is the same as the plan generated in step 5
## Step 6: litp create_plan
# Verification 6: Verify that the plan generated in step 2 is the same as the plan generated in step 6
# AC Mapping: AC1

## load the AT plugin. This generates lock/unlock tasks and tasks for uuid
add-plugins plugin/dummy_190067_lock
## set up a standard two node deployment
runLitpScript ../include/two_nodes.at

## enable ha_manager so that we can generate callback tasks
litp update -p /deployments/local/clusters/cluster1 -o ha_manager=vcs

## generate some model change so we can get the model to a fully applied state
litp create -t mock-package -p /software/items/telnet -o name=telnet
litp inherit -s /software/items/telnet -p /deployments/local/clusters/cluster1/nodes/node2/items/telnet

litp create_plan
litp run_plan
assertState -p /deployments/local/clusters/cluster1/nodes/node1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2 Applied
assertProperty /deployments/local/clusters/cluster1/nodes/node1 -o is_locked="false"
assertProperty /deployments/local/clusters/cluster1/nodes/node2 -o is_locked="false"

## The nodes are now applied and subsequent plans will feature lock/unlock tasks

# Step 1 update some uuids and another task that can fail
litp update -p /infrastructure/systems/system1/disks/disk0 -o uuid="bar"
litp update -p /infrastructure/systems/system2/disks/disk0 -o uuid="bar"
litp inherit -s /software/items/telnet -p /deployments/local/clusters/cluster1/nodes/node1/items/telnet

# Step 2
## Create plan
litp create_plan
failConfigTask package node1 /deployments/local/clusters/cluster1/nodes/node1/items/telnet

litp run_plan
assertAppliedPropertiesDeterminable -p /deployments/local/clusters/cluster1/nodes/node1/items/telnet False
assertProperty /deployments/local/clusters/cluster1/nodes/node1 -o is_locked="true"
litp create_plan

# Verification 2 assert plan generates as expected with lock tasks
assertNumberConfigTasks node1 1
assertNumberConfigTasks node2 0
assertNumberCallbackTasks 7
assertNumberLockTasks node1 1
assertNumberLockTasks node2 1
assertNumberUnlockTasks node1 2
assertNumberUnlockTasks node2 1
assertPlanLength 8

assertCallbackTask _noop /deployments/local/clusters/cluster1/nodes/node1
assertCallbackTask _noop /deployments/local/clusters/cluster1/nodes/node2

assertCallbackTask _lock /deployments/local/clusters/cluster1/nodes/node1
assertCallbackTask _unlock /deployments/local/clusters/cluster1/nodes/node1

assertCallbackTask _lock /deployments/local/clusters/cluster1/nodes/node2
assertCallbackTask _unlock /deployments/local/clusters/cluster1/nodes/node2

# Verification 2 assert the first task is an unlock
let __ul_n1 CallbackTask _unlock /deployments/local/clusters/cluster1/nodes/node1
let __l_n1 CallbackTask _lock /deployments/local/clusters/cluster1/nodes/node1

assertPhaseLength 0 1
assertCallbackTask _unlock /deployments/local/clusters/cluster1/nodes/node1

# Verification 2 assert the second task is a lock
assertPhaseLength 1 1
assertCallbackTask _lock /deployments/local/clusters/cluster1/nodes/node1
assertTaskBeforeTask __ul_n1 __l_n1

# Step 3
litp remove_plan
litp create_plan --no-lock-tasks

# Verification 3 assert plan generates as expected without lock tasks
assertNumberConfigTasks node1 1
assertNumberConfigTasks node2 0
assertNumberCallbackTasks 2
assertNumberLockTasks node1 0
assertNumberLockTasks node2 0
assertNumberUnlockTasks node1 0
assertNumberUnlockTasks node2 0

assertPlanLength 2

assertCallbackTask _noop /deployments/local/clusters/cluster1/nodes/node1
assertCallbackTask _noop /deployments/local/clusters/cluster1/nodes/node2

assertNoCallbackTask _lock /deployments/local/clusters/cluster1/nodes/node1
assertNoCallbackTask _unlock /deployments/local/clusters/cluster1/nodes/node1

assertNoCallbackTask _lock /deployments/local/clusters/cluster1/nodes/node2
assertNoCallbackTask _unlock /deployments/local/clusters/cluster1/nodes/node2

assertAppliedPropertiesDeterminable -p /deployments/local/clusters/cluster1/nodes/node1/items/telnet False
assertProperty /deployments/local/clusters/cluster1/nodes/node1 -o is_locked="true"
