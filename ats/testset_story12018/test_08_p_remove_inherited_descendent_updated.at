## test_08_p_remove_inherited_descendent_updated
## Description:
## When an inherited item's descendent whose state is
## "Updated" is removed, the item and its descendants
## will move to "ForRemoval" state

# Actions:
add-extensions extensions/test_12018_extension
add-plugins plugins/test_12018_plugin
runLitpScript ../include/two_nodes.at

# 1. Create an itemA with a child item
#    and a grandchild item
litp create -p /software/services/parent1 -t parent -o name=parent1 # source item
litp create -p /software/services/parent1/childs/child1 -t child -o name=child1
litp create -p /software/services/parent1/childs/child1/grand_children/grandchild1 -t grand-child -o name=grandchild1

assertState -p /software/services/parent1 Initial
assertState -p /software/services/parent1/childs/child1 Initial
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Initial

# 2. Inherit itemA to item1
litp inherit -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 -s /software/services/parent1

assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 Initial

# 3. Inherit itemA to item2
litp inherit -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 -s /software/services/parent1

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 Initial

# 4. Execute "create_plan" command
litp create_plan # don't disable callback mock

# 5. Execute "run_plan" command
litp run_plan
assertPlanState successful

# 6. Check all items are in "Applied" state
assertState -p /software/services/parent1 Applied
assertState -p /software/services/parent1/childs/child1 Applied
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 Applied

# 7. Update the source item, itemA, itemA child and grandchild items
litp update -p /software/services/parent1 -o name=parent2
litp update -p /software/services/parent1/childs/child1 -o name=child2
litp update -p /software/services/parent1/childs/child1/grand_children/grandchild1 -o name=grandchild2

# 8. Check that all descendents on itemA,
#    item1 and item2 are in state, "Updated"
assertState -p /software/services/parent1 Updated
assertState -p /software/services/parent1/childs/child1 Updated
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Updated

assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 Updated

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 Updated

# 9. Remove the descendent grandchild item, gc1 of the inherited item, item1
litp remove -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1

# 10.Check that the grandchild item, gc1 on
#    item1 is in state, "ForRemoval"
# 11.Check that all other descendents of itemA,
#    item1 and item2 are in state, "Updated"
assertState -p /software/services/parent1 Updated
assertState -p /software/services/parent1/childs/child1 Updated
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Updated

assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 ForRemoval

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 Updated

# 12.Remove the child descendent item of the inherited item, item2
litp remove -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1

# 13.Check that the child items, C2 on
#    item2 and its descendents are in state, "ForRemoval"
# 14.Check that the items, itemA and item1 and their descendents
#    remain in state, "Updated" expect grandchild on item1
assertState -p /software/services/parent1 Updated
assertState -p /software/services/parent1/childs/child1 Updated
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Updated

assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 ForRemoval

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 ForRemoval
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 ForRemoval

# 15.Execute "create_plan" command
litp create_plan # don't disable callback mock

# 16. Execute "run_plan" command
litp run_plan
assertPlanState successful

# 17.Check that the descendent items on itemA,
#    item1 and item2 have been removed
assertState -p /software/services/parent1 Applied
assertState -p /software/services/parent1/childs/child1 Applied
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 Applied
assertNone -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Applied
assertNone -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1
assertNone -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1

# Result:
# An inherited item's descendent whose state is
# "Updated" and its descendants
# will move to "ForRemoval" state
# when the item is removed and can be successfully
# removed by executing a plan
