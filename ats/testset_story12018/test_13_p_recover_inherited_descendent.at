## test_13_p_recover_inherited_descendent
## Description:
## When an attempt to recover the descendents of an inherited Item
## and its corresponding source item is not in ForRemoval
## then the item will return to its previous state
## 
# Actions:
add-extensions extensions/test_12018_extension
add-plugins plugins/test_12018_plugin
runLitpScript ../include/two_nodes.at

# 1. Create an itemA that has a child item,
#    c1 and a grandchild item, gc1
litp create -p /software/services/parent1 -t parent -o name=parent1 # source item
litp create -p /software/services/parent1/childs/child1 -t child -o name=child1
litp create -p /software/services/parent1/childs/child1/grand_children/grandchild1 -t grand-child -o name=grandchild1

# 2. Inherit itemA to item1 and item2
litp inherit -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 -s /software/services/parent1
litp inherit -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 -s /software/services/parent1

# 3. Execute "create_plan" command
litp create_plan

# 4. Execute "run_plan" command
litp run_plan

# 5. Check all items are in "Applied" state
assertState -p /software/services/parent1 Applied
assertState -p /software/services/parent1/childs/child1 Applied
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 Applied

###################################################################################################
# Check Inherited Item descendent can move from "Applied" to "ForRemoval" to "Applied"
# when its corresponding source is in state, "Applied"
#####################################################################################################
# 6. Remove the inherited descendent item under item1
litp remove -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1

# 7. Check that item1 and its descendents are in "ForRemoval" state
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 ForRemoval
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 ForRemoval

# 8. Check items, itemA and item2 remain in "Applied" state
assertState -p /software/services/parent1 Applied
assertState -p /software/services/parent1/childs/child1 Applied
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 Applied

# 9. Execute litp "update" command with original applied property to recover
#    inherited item descendent, item1 child item
litp update -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 -o name=child1

# 10.Check all items are in "Applied" state
assertState -p /software/services/parent1 Applied
assertState -p /software/services/parent1/childs/child1 Applied
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 Applied

####################################################################################################
# Check Inherited Item descendent can move from "Updated" to "ForRemoval" to "Applied"
# when its corresponding source is in state, "Applied"
#####################################################################################################
# 11.Update a property of item1 child item to a new value
litp update -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 -o name=update_child

# 12.Check that item1 child item is in the "Updated" state and its
#    descendents are in the "Applied" state
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 Applied

# 13.Check items, itemA and item2 remain in "Applied" state
assertState -p /software/services/parent1 Applied
assertState -p /software/services/parent1/childs/child1 Applied
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 Applied

# 14.Remove the inherited descendent item under item1
litp remove -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1

# 15.Check that item1 and its descendents are in "ForRemoval" state
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 ForRemoval
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 ForRemoval

# 16.Check items, itemA and item2 remain in "Applied" state
assertState -p /software/services/parent1 Applied
assertState -p /software/services/parent1/childs/child1 Applied
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 Applied

# 17.Recover the descendent of an inherited item by using the litp
#   "update" command given the original applied property value
litp update -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 -o name=child1

# 18.Check that item1 and its
#    descendents are in the "Applied" state
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /software/services/parent1 Applied
assertState -p /software/services/parent1/childs/child1 Applied
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 Applied

####################################################################################################
# Check Inherited Item descendent can move from "Updated" to "ForRemoval" to "Updated"
# when its corresponding source is in state, "Applied"
######################################################################################################
# 11.Update a property of item1 child item to a new value
litp update -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 -o name=update_child

# 12.Check that item1 child item is in the "Updated" state and its
#    descendents are in the "Applied" state
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 Applied

# 13.Check items, itemA and item2 remain in "Applied" state
assertState -p /software/services/parent1 Applied
assertState -p /software/services/parent1/childs/child1 Applied
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 Applied

# 14.Remove the inherited descendent item under item1
litp remove -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1

# 15.Check that item1 and its descendents are in "ForRemoval" state
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 ForRemoval
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 ForRemoval

# 16.Check items, itemA and item2 remain in "Applied" state
assertState -p /software/services/parent1 Applied
assertState -p /software/services/parent1/childs/child1 Applied
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 Applied

# 17.Recover the descendent of an inherited item by using the litp
#   "update" command given the new property value
litp update -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 -o name=update_child

# 18.Check that the descendent of an inherited item, item1 is in ""Updated" state and its
#    descendents are in the "Applied" state
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 Applied

# 19.Check items, itemA and item2 remain in "Applied" state
assertState -p /software/services/parent1 Applied
assertState -p /software/services/parent1/childs/child1 Applied
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 Applied

###################################################################################################
# Check Inherited Item descendent can move from "Updated" to "ForRemoval" to "Updated"
# when its corresponding source is in state, "Updated"
#####################################################################################################
# 20.Update a property of the source item, itemA child item to a new value
litp update -p /software/services/parent1/childs/child1 -o name=update2_child

# 21.Check that itemA, item1 and item2 child items are in the "Updated" state and their
#    descendents are in the "Applied" state
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /software/services/parent1 Applied
assertState -p /software/services/parent1/childs/child1 Updated
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 Applied

# 22.Remove the descendent of an inherited item under item1
litp remove -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1

# 23.Check that item1 child item is in "ForRemoval" state
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 ForRemoval
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 ForRemoval

# 24.Check that itemA  and item2 child items are in the "Updated" state and their
#    descendents are in the "Applied" state
assertState -p /software/services/parent1 Applied
assertState -p /software/services/parent1/childs/child1 Updated
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 Applied

# 25.Update a property of the in herited descendent item, item1, child item to the value updated by source
litp update -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 -o name=update2_child

# 26.Check that the inherited descendent item, item1, child item is in the "Updated" state
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 Applied

# 27.Check that itemA, item1  and item2 child items are in the "Updated" state and their
#    descendents are in the "Applied" state

assertState -p /software/services/parent1 Applied
assertState -p /software/services/parent1/childs/child1 Updated
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 Applied

###################################################################################################
# Check Inherited Item descendent can move from "Updated" to "ForRemoval" to "Applied"
# when its corresponding source is in state, "Updated"
####################################################################################################
# 28.Update a property of the inherited item descendent, item1, child item
litp update -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 -o name=update_child1

# 29.Check that the inherited item descendent, item1 child item is in "Updated" state
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 Applied

# 30.Check items, itemA and item2 remain in "Updated" state
#    and their descendents remain in state, "Applied"
assertState -p /software/services/parent1 Applied
assertState -p /software/services/parent1/childs/child1 Updated
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 Applied

# 31.Execute litp "update" command using the original property value to recover
#    the inherited descendent item, item1 child item
litp update -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 -o name=child1

# 32.Check all items are in "Applied" state
assertState -p /software/services/parent1 Applied
assertState -p /software/services/parent1/childs/child1 Updated
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 Applied

# Result:
# The descendent of an inherited item returns to its previous state when
# its corresponding source is not in ForRemoval
