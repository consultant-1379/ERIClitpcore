## Description:
## When an attempt to recover a doubly inherited descendent
## and its corresponding parent is in "ForRemoval" state
## then a MethodNotAllowedError is raised
##
## Preconditions:
## Source itemA: /software/items/itemA
## Inherited item1 (source is itemA): /ms/items/item1
## Doubly inherited item2 (source is child of item1): /deployments/local/clusters/cluster1/nodes/node1/items/item2
## Note that child of item2 is a reference to the grandchild of item1

add-extensions extensions/test_12798_extension_test_12
add-plugins plugins/test_12798_plugin_test_12
runLitpScript ../include/two_nodes.at

# 1,4 Create an itemA with a child item a grandchild item and a grand-grandchild

litp create -t parent -p /software/items/itemA -o name=parent1
litp create -t child -p /software/items/itemA/childs/child1 -o name=child1
litp create -t g-child -p /software/items/itemA/childs/child1/grand_children/grandchild1 -o name=grandchild1
litp create -t g-g-child -p /software/items/itemA/childs/child1/grand_children/grandchild1/grand_grand_children/grand_grandchild1 -o name=grand_grandchild1

assertState -p /software/items/itemA Initial
assertState -p /software/items/itemA/childs/child1 Initial
assertState -p /software/items/itemA/childs/child1/grand_children/grandchild1 Initial
assertState -p /software/items/itemA/childs/child1/grand_children/grandchild1/grand_grand_children/grand_grandchild1 Initial

# 2,4 Inherit itemA to item1
litp inherit -p /ms/items/item1 -s /software/items/itemA

assertState -p /ms/items/item1 Initial
assertState -p /ms/items/item1/childs/child1 Initial
assertState -p /ms/items/item1/childs/child1/grand_children/grandchild1 Initial
assertState -p /ms/items/item1/childs/child1/grand_children/grandchild1/grand_grand_children/grand_grandchild1 Initial

# 3,4 Inherit child of item1 to item2
litp inherit -p /deployments/local/clusters/cluster1/nodes/node1/items/item2 -s /ms/items/item1/childs/child1

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item2 Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item2/grand_children/grandchild1 Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item2/grand_children/grandchild1/grand_grand_children/grand_grandchild1 Initial

# 5,6 create and run plan
litp create_plan
litp run_plan

# 7. Check all items are in "Applied" state

assertState -p /software/items/itemA Applied
assertState -p /software/items/itemA/childs/child1 Applied
assertState -p /software/items/itemA/childs/child1/grand_children/grandchild1 Applied
assertState -p /software/items/itemA/childs/child1/grand_children/grandchild1/grand_grand_children/grand_grandchild1 Applied

assertState -p /ms/items/item1 Applied
assertState -p /ms/items/item1/childs/child1 Applied
assertState -p /ms/items/item1/childs/child1/grand_children/grandchild1 Applied
assertState -p /ms/items/item1/childs/child1/grand_children/grandchild1/grand_grand_children/grand_grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item2 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item2/grand_children/grandchild1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item2/grand_children/grandchild1/grand_grand_children/grand_grandchild1 Applied

# 8. Remove doubly inherited item2
litp remove -p /deployments/local/clusters/cluster1/nodes/node1/items/item2

# 10.Check item2 and its descendents are in "ForRemoval" state

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item2 ForRemoval
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item2/grand_children/grandchild1 ForRemoval
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item2/grand_children/grandchild1/grand_grand_children/grand_grandchild1 ForRemoval

# 11. Check that all other items are in "Applied" state

assertState -p /software/items/itemA Applied
assertState -p /software/items/itemA/childs/child1 Applied
assertState -p /software/items/itemA/childs/child1/grand_children/grandchild1 Applied
assertState -p /software/items/itemA/childs/child1/grand_children/grandchild1/grand_grand_children/grand_grandchild1 Applied

assertState -p /ms/items/item1 Applied
assertState -p /ms/items/item1/childs/child1 Applied
assertState -p /ms/items/item1/childs/child1/grand_children/grandchild1 Applied
assertState -p /ms/items/item1/childs/child1/grand_children/grandchild1/grand_grand_children/grand_grandchild1 Applied

# 12,13 Attempt to execute litp "update" command to recover descendent of a doubly inherited item (child item)
assertError --err_type MethodNotAllowedError update \
 -p /deployments/local/clusters/cluster1/nodes/node1/items/item2/grand_children/grandchild1 -o name=grandchild1_updated

# 14,15 Attempt to execute litp "create" command to re-create descendent of an inherited item (child item)
assertError --err_type MethodNotAllowedError create -t 'g-child' \
 -p /deployments/local/clusters/cluster1/nodes/node1/items/item2/grand_children/grandchild1 -o name=grandchild1_updated

# 16,17 Attempt to execute litp "update" command to recover descendent of doubly inherited item (grandchild item)
assertError --err_type MethodNotAllowedError update \
 -p /deployments/local/clusters/cluster1/nodes/node1/items/item2/grand_children/grandchild1/grand_grand_children/grand_grandchild1 \
  -o name=grandchild1_updated

# 18. Attempt to execute litp "create" command to re-create descendent of doubly inherited item (grandchild item)
assertError --err_type MethodNotAllowedError create -t 'g-g-child' \
 -p /deployments/local/clusters/cluster1/nodes/node1/items/item2/grand_children/grandchild1/grand_grand_children \
  -o name=grand_grandchild1_updated

# Result:
# The expected Validation Error is seen when an
# attempt is made to recover a doubly inherited descendent
# when its corresponding parent is in "ForRemoval" state
