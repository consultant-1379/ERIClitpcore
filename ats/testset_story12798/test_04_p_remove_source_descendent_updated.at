## Description:
## When the descendent of a source item
## in state is "Updated" is removed,
## then the item and its descendants
## and all its corresponding inherited progeny
## (which encompasses inherited progeny and double inherited progeny)
## will move to "ForRemoval" state

## Preconditions:
## Source itemA: /software/items/itemA
## Inherited item1 (source is itemA): /deployments/local/clusters/cluster1/nodes/node1/items/item1
## Doubly inherited item2 (source is grandchild of item1): /deployments/local/clusters/cluster1/nodes/node1/items/item2
## Inherited item3 (source is itemA): /deployments/local/clusters/cluster1/nodes/node1/items/item3
## Doubly inherited item4 (source is grandchild of item3): /deployments/local/clusters/cluster1/nodes/node2/items/item4

add-extensions extensions/test_12798_extension_test_12
add-plugins plugins/test_12798_plugin_test_15
runLitpScript ../include/two_nodes.at

# 1. Create an itemA with a child item and a grandchild item
litp create -t parent -p /software/items/itemA
litp create -t child -p /software/items/itemA/childs/child1 -o name='original_child_name'
litp create -t 'g-child' -p /software/items/itemA/childs/child1/grand_children/grandchild1 -o name='original_grandchild_name'

assertState -p /software/items/itemA Initial
assertState -p /software/items/itemA/childs/child1 Initial
assertState -p /software/items/itemA/childs/child1/grand_children/grandchild1 Initial

# 2. Inherit itemA to item1
litp inherit -p /deployments/local/clusters/cluster1/nodes/node1/items/item1 -s /software/items/itemA

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item1 Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item1/childs/child1 Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item1/childs/child1/grand_children/grandchild1 Initial

# 3. Inherit grandchild of item1 to item2
litp inherit -p /deployments/local/clusters/cluster1/nodes/node1/items/item2 \
 -s /deployments/local/clusters/cluster1/nodes/node1/items/item1/childs/child1/grand_children/grandchild1

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item2 Initial

# 4. Inherit itemA to item3
litp inherit -p /deployments/local/clusters/cluster1/nodes/node1/items/item3 -s /software/items/itemA

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item3 Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item3/childs/child1 Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item3/childs/child1/grand_children/grandchild1 Initial

# 5. Inherit grandchild of item3 to item4
litp inherit -p /deployments/local/clusters/cluster1/nodes/node1/items/item4 \
 -s /deployments/local/clusters/cluster1/nodes/node1/items/item3/childs/child1/grand_children/grandchild1

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item4 Initial

# 6,7 create and run plan
litp create_plan
litp run_plan

# 8. Check all items are in "Applied" state
assertState -p /software/items/itemA Applied
assertState -p /software/items/itemA/childs/child1 Applied
assertState -p /software/items/itemA/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item2 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item3 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item3/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item3/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item4 Applied

# 9. Update the source descendent item on itemA (grandchild item)
litp update -p /software/items/itemA/childs/child1/grand_children/grandchild1 -o name='updated_grandchild_name'

# 10.Check that the grandchild items, on itemA, item1 and item3 are in state, "Updated"
# 11.Check that doubly inherited item2 and item4 are in state "Updated"
# 12.Check all other items remain in state, "Applied"
assertState -p /software/items/itemA Applied
assertState -p /software/items/itemA/childs/child1 Applied
assertState -p /software/items/itemA/childs/child1/grand_children/grandchild1 Updated

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item1/childs/child1/grand_children/grandchild1 Updated

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item2 Updated

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item3 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item3/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item3/childs/child1/grand_children/grandchild1 Updated

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item4 Updated

# 13.Remove the source descendent item on itemA (grandchild item)
litp remove -p /software/items/itemA/childs/child1/grand_children/grandchild1

# 14. Check that the grandchild items on itemA, item1 and item3 are in state, "ForRemoval"
# 15.Check that doubly inherited item2 and item4 are in state "ForRemoval"
assertState -p /software/items/itemA Applied
assertState -p /software/items/itemA/childs/child1 Applied
assertState -p /software/items/itemA/childs/child1/grand_children/grandchild1 ForRemoval

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item1/childs/child1/grand_children/grandchild1 ForRemoval

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item2 ForRemoval

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item3 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item3/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item3/childs/child1/grand_children/grandchild1 ForRemoval

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item4 ForRemoval

# 16.Recreate grandchild on itemA with original property values
litp create -t 'g-child' -p /software/items/itemA/childs/child1/grand_children/grandchild1 -o name='original_grandchild_name'

# 17 .Check all items are in "Applied" state
assertState -p /software/items/itemA Applied
assertState -p /software/items/itemA/childs/child1 Applied
assertState -p /software/items/itemA/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item2 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item3 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item3/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item3/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item4 Applied

# 18. Update a source descendent item on itemA (child item)
litp update -p /software/items/itemA/childs/child1 -o name='updated_child_name'

# 19. Check that the child items on itemA, item1 and item3 are in state, "Updated"
# 20. Check that the grandchild items on itemA, item1 and item3 are in state, "Applied"
# 21. Check that doubly inherited item2 and item4 are in state "Applied"
assertState -p /software/items/itemA Applied
assertState -p /software/items/itemA/childs/child1 Updated
assertState -p /software/items/itemA/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item1/childs/child1 Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item2 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item3 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item3/childs/child1 Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item3/childs/child1/grand_children/grandchild1 Applied

# 22.Remove a source descendant item on itemA (child item)
litp remove -p /software/items/itemA/childs/child1

# 23.Check that the child items on itemA, item1 and item3 are in state, "ForRemoval"
# 24.Check that the grandchild items on itemA, item1 and item3 are in state, "ForRemoval"
# 25.Check that doubly inherited item2 and item4 are in state "ForRemoval"
assertState -p /software/items/itemA Applied
assertState -p /software/items/itemA/childs/child1 ForRemoval
assertState -p /software/items/itemA/childs/child1/grand_children/grandchild1 ForRemoval

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item1/childs/child1 ForRemoval
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item1/childs/child1/grand_children/grandchild1 ForRemoval

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item2 ForRemoval

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item3 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item3/childs/child1 ForRemoval
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item3/childs/child1/grand_children/grandchild1 ForRemoval

# 26,27 create and run plan
litp create_plan
litp run_plan

# 28. Check that the descendent items on itemA, item1 and item3 have been removed
# 29. Check that doubly inherited item2 and item4 item1 and item3 have been removed
assertState -p /software/items/itemA Applied
assertNone -p /software/items/itemA/childs/child1
assertNone -p /software/items/itemA/childs/child1/grand_children/grandchild1

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item1 Applied
assertNone -p /deployments/local/clusters/cluster1/nodes/node1/items/item1/childs/child1
assertNone -p /deployments/local/clusters/cluster1/nodes/node1/items/item1/childs/child1/grand_children/grandchild1

assertNone -p /deployments/local/clusters/cluster1/nodes/node1/items/item2

assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/item3 Applied
assertNone -p /deployments/local/clusters/cluster1/nodes/node1/items/item3/childs/child1
assertNone -p /deployments/local/clusters/cluster1/nodes/node1/items/item3/childs/child1/grand_children/grandchild1 ForRemoval

## Result:
## When an inherit source descendent in state "Updated",
## is removed, the item and its descendants
## and all its corresponding inherited progeny
## (which encompasses inherited progeny and double inherited progeny)
## will move to "ForRemoval" state
## and can be successfully removed by executing
## a plan