 # test_09_n_prepare_for_restore_remove_dependencies.at
 # =====================================================
 # Description:
 # -Test that prepare an restore does not remove
 #  dependencies.

 # Actions:
 # 1. Create a deployment with multiple clusters
 # 2. Add a cluster to the "dependency_list" property
 # 3. Follow the steps
 # 4. Set-up config tasks
 # 5. Update the "dependency_list" property to add
 # a cluster
 # 6. Create the plan
 # 7. After plan is created, check that
 # the tasks are ordered as per the order
 # in the "dependency_list" property
 # 8. Run the plan
 # 9. Prepare and Restore the plan
 # 10. Recreate plan
 # 11. After plan is created, check that
 # the tasks are ordered as per the order
 # in the "dependency_list" property

 # Result:
 # Set-up dependencies should not be removed by
 # prepare and restore

# 1, 2 & 3. Create cluster with multi deployment, define dependencies and create configurations
add-extensions ../plugins/dummy_9657
add-plugins ../plugins/dummy_9657
runLitpScript misc/create_multi_cluster_deployment.inc

# 4. Create plan and check order

let __task_n1_c3 ConfigTask c3-node1 foo foo1 /deployments/litpcds_9657/clusters/cluster_3/nodes/node1/items/foo1
let __task_n2_c3 ConfigTask c3-node2 foo foo1 /deployments/litpcds_9657/clusters/cluster_3/nodes/node2/items/foo1

let __task_n1_c2 ConfigTask c2-node1 foo foo1 /deployments/litpcds_9657/clusters/cluster_2/nodes/node1/items/foo1
let __task_n2_c2 ConfigTask c2-node2 foo foo1 /deployments/litpcds_9657/clusters/cluster_2/nodes/node2/items/foo1

let __task_n1_c1 ConfigTask c1-node1 foo foo1 /deployments/litpcds_9657/clusters/cluster_1/nodes/node1/items/foo1
let __task_n2_c1 ConfigTask c1-node2 foo foo1 /deployments/litpcds_9657/clusters/cluster_1/nodes/node2/items/foo1

let __task_n1_ca ConfigTask ca-node1 foo foo1 /deployments/litpcds_9657/clusters/cluster_alpha/nodes/node1/items/foo1
let __task_n2_ca ConfigTask ca-node2 foo foo1 /deployments/litpcds_9657/clusters/cluster_alpha/nodes/node2/items/foo1

let __task_n1_cnha ConfigTask c-no-ha-node1 foo foo1 /deployments/litpcds_9657/clusters/cluster_no_ha/nodes/node1/items/foo1
let __task_n2_cnha ConfigTask c-no-ha-node2 foo foo1 /deployments/litpcds_9657/clusters/cluster_no_ha/nodes/node2/items/foo1

let __task_n1_cz ConfigTask cz-node1 foo foo1 /deployments/litpcds_9657/clusters/cluster_zulu/nodes/node1/items/foo1
let __task_n2_cz ConfigTask cz-node2 foo foo1 /deployments/litpcds_9657/clusters/cluster_zulu/nodes/node2/items/foo1


# 5. Update the "dependency_list" property to add a cluster
litp update -p /deployments/litpcds_9657/clusters/cluster_zulu -o dependency_list="cluster_1"

# 6. create plan
litp create_plan

# 7. Check new order
# Expected order: cluster_3 -> cluster_2 -> cluster_1 -> cluster_zulu -> cluster_alpha -> cluster_no_ha
assertTaskBeforeTask  __task_n1_c3 __task_n1_c2 __task_n1_c1 __task_n1_cz __task_n1_ca __task_n1_cnha
assertTaskBeforeTask  __task_n2_c3 __task_n2_c2 __task_n2_c1 __task_n2_cz __task_n2_ca __task_n2_cnha

# 8. Run the plan
litp run_plan

# 9. Prepare and Restore the plan
litp update -p /litp/prepare-restore -o path=/ actions='all'

# 10. Recreate plan
litp create_plan

# 11. Check new order
# Expected order: cluster_3 -> cluster_2 -> cluster_1 -> cluster_zulu -> cluster_alpha -> cluster_no_ha
assertTaskBeforeTask  __task_n1_c3 __task_n1_c2 __task_n1_c1 __task_n1_cz __task_n1_ca __task_n1_cnha
assertTaskBeforeTask  __task_n2_c3 __task_n2_c2 __task_n2_c1 __task_n2_cz __task_n2_ca __task_n2_cnha
