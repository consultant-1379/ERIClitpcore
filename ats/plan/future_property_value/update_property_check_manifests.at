#        Test Description
#        Given a running plan, if a property value is updated, prior to the
#        ConfigTask()'s execution, during the plan execution, then the task's
#        properties will reflect the update.
#
#        Pre-Requisites
#         A running litpd service
#         An installed test item type extension/plugin
#
#        Risks
#         Once an item type extension is installed and registered with the litpd
#         service, it cannot be removed
#         Once a plugin is installed, it cannot be removed
#
#        Pre-Test Steps
#        1.  Create a new item type extension as described in the LITP 2 SDK
#        2.  Create a new plugin as described in the LITP 2 SDK
#        3.  Edit the item type extension to have a plugin updatable property
#            with a default value
#        4.  Edit the plugin to have a CallbackTask() to update the plugin
#            updatable property value
#        5.  Edit the plugin to have a ConfigTask() to make use of the property
#            value
#        6.  Build and install the extension package
#        7.  Build and install the plugin package
#
#        Steps
#        1.  Execute the create command to create a model item
#        2.  Execute the create_plan command
#        3.  Check the property's default value
#        4.  Execute the run_plan command
#        5.  Check that the CallbackTask() updates the property's value
#        6.  Wait for plan execution to complete successfully
#        7.  Check puppet manifests show the updated property value
#
#        Restore
#        1.  Execute the remove command on the created model item
#        2.  Execute the create_plan command
#        3.  Execute the run_plan command
#        4.  Wait for plan execution to complete succesfully
#        5.  Check model item is removed from the model
#
#        Expected Result
#        The puppet manifests generated from the ConfigTask(), during the plan
#        execution, will reflect the property's updated value.
 
runLitpScript ../../include/two_nodes.at
add-extensions ../../plugins/future_property
add-plugins ../../plugins/future_property

#        1.  Execute the create command to create a model item
litp create -p /software/items/test_item -t test_item -o name=test_item 
litp inherit -p /deployments/local/clusters/cluster1/nodes/node1/items/test_item -s /software/items/test_item -o version="X.X.X"

#        2.  Execute the create_plan command
litp create_plan

#        3.  Check the property's default value
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/test_item -o version="X.X.X"

#        4.  Execute the run_plan command
disableCallbackMock cb_update_property /deployments/local/clusters/cluster1/nodes/node1
litp run_plan

#        5.  Check that the CallbackTask() updates the property's value
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/test_item -o version='Y.Y.Y'

#        6.  Wait for plan execution to complete successfully
#        7.  Check puppet manifests show the updated property value
assertDirectoryContents future_property_manifests /opt/ericsson/nms/litp/etc/puppet/manifests/plugins/
