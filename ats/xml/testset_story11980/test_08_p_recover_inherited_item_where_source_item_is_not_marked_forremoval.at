## test_08_p_recover_inherited_item_where_source_item_is_not_marked_forremoval.at
## Description:
## Recover inherited item where corresponding source item is not marked ForRemoval
## Verify that when the inherited item in the inheritance tree has been removed and the corresponding
## source item is not in ForRemoval state then when I run load --replace <file.xml>
## where corresponding source item is present and all other items are present on the xml file then I re-inherited the inherited items

## Actions:

## AC 3.1

add-extensions extensions/test_11980_extension
add-plugins plugins/test_11980_plugin
runLitpScript ../../include/two_nodes.at

## 1. Create an parent with a child item and a grandchild item
litp create -p /software/services/parent1 -t parent -o name=parent1 # source item
litp create -p /software/services/parent1/childs/child1 -t child -o name=child1
litp create -p /software/services/parent1/childs/child1/grand_children/grandchild1 -t grand-child -o name=grandchild1

assertState -p /software/services/parent1 Initial
assertState -p /software/services/parent1/childs/child1 Initial
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Initial

## 1. Inherit parent to node1
litp inherit -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 -s /software/services/parent1
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 Initial

## 1. Inherit parent to node2
litp inherit -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 -s /software/services/parent1
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 Initial

litp create_plan
litp run_plan
assertPlanState successful

## 1. Assert model in Applied state
assertState -p /software/services/parent1 Applied
assertState -p /software/services/parent1/childs/child1 Applied
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 Applied

## 1. Make Changes to the model to for test structure
#~/X/.../Ps(Applied)/Cs(Applied)/Gs(Applied)
#~/Y/.../Pd(Applied)/Cd(Applied)/
#~/Z/.../Pd(Applied)/Cd(Applied)/

litp remove -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1
litp remove -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1

assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 ForRemoval

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 ForRemoval

litp create_plan
litp run_plan
assertPlanState successful

assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 Applied
assertNone -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Applied
assertNone -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1

## 2. Load an xml file where (X-Gs,Y-Gd,Z-Gd),(X-Cs Y-Cd,Z-Cd) and (X-Ps, Y-Pd,Z-Pd) items are present, using the --replace argument.

litp load -p / --replace -f xml/full_model.xml

# 4. Assert that all the items in the model are as follows:

#     /X/.../Ps(Applied)/Cs(Applied)/Gs(Applied)
#     ~/Y/.../Pd(Applied)/Cd(Applied)/Gd(Initial)
#     ~/Z/.../Pd(Applied)/Cd(Applied)/Gd(Initial)

assertState -p /software/services/parent1 Applied
assertState -p /software/services/parent1/childs/child1 Applied
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 Initial

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 Initial
