## test_09_n_recovering_a_removed_Inherited_item_where_its_ancestor_is_missing_from_xml
## Description
## Recovering a removed Inherited item where its ancestor is missing from xml
## Verify that when the leaf item (Gd) of an inherited item in the inheritance
## tree has been removed and I run load --replace <file.xml>
## where -Cd is missing and all other items are present on the xml file I then
## get an XSD error msg

add-extensions extensions/test_11980_extension
add-plugins plugins/test_11980_plugin
runLitpScript ../../include/two_nodes.at

## AC 3.3

## 1. Create a parent child and grandchild item
litp create -p /software/services/parent1 -t parent -o name=parent1 # source item
litp create -p /software/services/parent1/childs/child1 -t child -o name=child1
litp create -p /software/services/parent1/childs/child1/grand_children/grandchild1 -t grand-child -o name=grandchild1

## 2. Inherit parent to node1
litp inherit -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 -s /software/services/parent1


## 3. Inherit parent to node2
litp inherit -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 -s /software/services/parent1

## 4. Updated node 2 grandchild name
litp update -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1  -o name=grandchild1Prime

## 5. assert all initial
assertState -p /software/services/parent1 Initial
assertState -p /software/services/parent1/childs/child1 Initial
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 Initial

## 6. Execute "create_plan"
litp create_plan
litp run_plan

assertPlanState successful

## 7. Assert model in state Applied

assertState -p /software/services/parent1 Applied
assertState -p /software/services/parent1/childs/child1 Applied
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 Applied

## 8. remove grandchildren from node 1 an 2
litp remove -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1
litp remove -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 ForRemoval
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 ForRemoval

## 9. Execute "create_plan" and assert successful
litp create_plan
litp run_plan
assertPlanState successful

## 10. Assert grandchildren have been removed and other items in state Applied

assertState -p /software/services/parent1 Applied
assertState -p /software/services/parent1/childs/child1 Applied
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Applied
assertNone -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1
assertNone -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1

## 11. create error invalid xml for the assert
let __err_1 --err_type "InvalidXMLError"

# litp is loading a grandchild element (with its correct source_path) in the place of its parent collection and therefore appears like an update to the source_path property instead of an invalid child item
let __err_2 --err_type "MethodNotAllowedError" --err_vpath /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/grandchild1 --err_message "Cannot re-inherit item from different source"

assertError --errors_length 2 __err_1 __err_2 load -p / -f xml/invalid_inherited_child_omitted.xml --replace

# Assert no changes were made to the model
assertState -p /software/services/parent1 Applied
assertState -p /software/services/parent1/childs/child1 Applied
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Applied
assertNone -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1
assertNone -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild9
assertNone -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1
