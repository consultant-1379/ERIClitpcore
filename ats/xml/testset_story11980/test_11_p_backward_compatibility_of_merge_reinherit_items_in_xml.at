## test_11_p_backward_compatibility_of_merge_reinherit_items_in_xml.at
## Description:
## Previously removed inheritance in Model, explicitly inherited in XML
## Verify that when the inherited items in the inheritance tree has been removed and I
## run load --merge <file.xml> the removed inherited items ommited and all other items are present on the xml file then
## the previously removed items are re-inherited

## Actions:

## AC 4.2

add-extensions extensions/test_11980_extension
add-plugins plugins/test_11980_plugin
runLitpScript ../../include/two_nodes.at

## 1. Create an parent with a child item and a grandchild item
litp create -p /software/services/parent1 -t parent -o name=parent1 # source item
litp create -p /software/services/parent1/childs/child1 -t child -o name=child1
litp create -p /software/services/parent1/childs/child1/grand_children/grandchild1 -t grand-child -o name=grandchild1

assertState -p /software/services/parent1 Initial
assertState -p /software/services/parent1/childs/child1 Initial
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Initial

## 2. Inherit parent to node1
litp inherit -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 -s /software/services/parent1
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 Initial

## 3. Inherit parent to node2
litp inherit -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 -s /software/services/parent1
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 Initial

litp create_plan
litp run_plan
assertPlanState successful

assertState -p /software/services/parent1 Applied
assertState -p /software/services/parent1/childs/child1 Applied
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 Applied

# 1. Make Changes to the model to obtain the following structure:
#
# #     /X/.../Ps(Applied)/Cs(Applied)/Gs(Applied)
# #     ~/Y/.../Pd(Applied)/
# #     ~/Z/.../Pd(Applied)/

litp remove -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1
litp remove -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1

assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1 ForRemoval
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1 ForRemoval

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1 ForRemoval
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1 ForRemoval

litp create_plan
litp run_plan
assertPlanState successful

assertState -p /software/services/parent1 Applied
assertState -p /software/services/parent1/childs/child1 Applied
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1 Applied

assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1 Applied
assertNone -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1
assertNone -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1

assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1 Applied
assertNone -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1
assertNone -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1

# 2. Create an xml file where ( Y-Cd,Z-Cd) and (X-Ps, Y-Pd,Z-Pd) items are present

# 3. Run "litp load --merge <file.xml>"
litp load -p / --merge -f xml/inherited_grandchildren_omitted.xml

# 4. Assert that all the items in the model are as follows:

#     /X/.../Ps(Applied)/Cs(Applied)/Gs(Applied)
#     ~/Y/.../Pd(Applied)/Cd(Initial)/Gd(Initial)
#     ~/Z/.../Pd(Applied)/Cd(Initial)/Gd(Initial)
assertState -p /software/services/parent1  Applied
assertState -p /software/services/parent1/childs/child1  Applied
assertState -p /software/services/parent1/childs/child1/grand_children/grandchild1  Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1  Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1  Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/services/parent1/childs/child1/grand_children/grandchild1  Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1  Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1  Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node2/services/parent1/childs/child1/grand_children/grandchild1  Initial
