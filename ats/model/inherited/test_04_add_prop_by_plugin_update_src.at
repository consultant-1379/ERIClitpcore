## Test Plugin API
## Purpose of this test is to check the reference state transition depending on 
## the items' previous state and actions taken on the source and reference.
## In all cases for this AT, the property updated by the plugin is not define
## for source item.
## State transition is triggered by plugin when create_plan command is issued
## All test cases in this AT are variants of the following steps below.
## Variations: reference properties are either inherited from source or overwritten with local values
## Generic test cases steps:
## 1. Test case precondition:
##    Property not defined for source item (Same fo all test cases)
##    Property not defined or defined with overwritten values for reference item
##    (will vary per test case)
##    Previous state of source and reference (will vary per test case)
## 2. Action:
##    Add the property to the source item via plugin by invoking create_plan
##    (Same for all test case)
## 3. Result:
##    Check reference state (will vary per test case)
##    Property is added to reference item (if not previously defined)
##    or reference property value is left unchanged (if reference property
##    value is overwritten with local value)

# Prerequisite:
# Create a plugin that generates the ability to update a source property based on item name
# For example, if item name is 'prop1_new_repo' then the plugin will update the 
# source item's property called 'myprop1' to the value 'new' when create_plan is invoked.
add-extensions ../../extensions/update_src_prop_extensions
add-plugins ../../plugins/update_src_prop_plugin

# Set up Model
runLitpScript ../../include/two_nodes.at
# foo item is used by plugin as a flag to control which source item is updated
litp create -p /software/items/foo -t mock-package -o name='foo' version=1

# Create Source and reference item for next test case
litp create -p /software/items/prop2_new_init -t myrepository -o name='prop2_new_init' myprop1='orig'
litp inherit -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init -s /software/items/prop2_new_init

# tc-04-1
# Initial source with Initial reference
# prop2 not defined for neither source nor reference
# Action: Update source with new property (prop2)
# Result: reference state remains Initial
#         Property added to reference item
assertState -p /software/items/prop2_new_init Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init Initial

assertProperty /software/items/prop2_new_init -o myprop1='orig'
assertPropertyUnset -p /software/items/prop2_new_init -o myprop2
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init -o myprop1='orig'
assertPropertyUnset -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init -o myprop2

# Action:
# create_plan to invoke plugin update_model to change source property value
litp update -p /software/items/foo -o name='prop2_new_init'
litp create_plan

# Resulting state
assertState -p /software/items/prop2_new_init Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init Initial

assertProperty /software/items/prop2_new_init -o myprop1='orig'
assertProperty /software/items/prop2_new_init -o myprop2='new'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init -o myprop1='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init -o myprop2='new'

# Remove previous items and create source and reference items for next test case
litp remove -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init
litp remove -p /software/items/prop2_new_init
litp create -p /software/items/prop2_new_init -t myrepository -o name='prop2_new_init' myprop1='orig'
litp inherit -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init -s /software/items/prop2_new_init \
    -o myprop2='local'

# tc-04-2
# Initial source with Initial reference
# prop2 only defined for reference, not for the source item
# Action: Update source with new property (prop2)
# Result: reference state remains Initial
#         Property added to reference item
assertState -p /software/items/prop2_new_init Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init Initial

assertProperty /software/items/prop2_new_init -o myprop1='orig'
assertPropertyUnset -p /software/items/prop2_new_init -o myprop2
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init -o myprop1='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init -o myprop2='local'

# Action:
# create_plan to invoke plugin update_model to change source property value
litp update -p /software/items/foo -o name='prop2_new_init'
litp create_plan

# Resulting state
assertState -p /software/items/prop2_new_init Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init Initial

assertProperty /software/items/prop2_new_init -o myprop1='orig'
assertProperty /software/items/prop2_new_init -o myprop2='new'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init -o myprop1='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init -o myprop2='local'

# Remove previous items and create source and reference items for next test case
litp remove -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init
litp remove -p /software/items/prop2_new_init

litp create -p /software/items/prop2_new_repo -t myrepository -o name='prop2_new_repo' myprop1='orig'
litp inherit -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -s /software/items/prop2_new_repo

litp create_plan
litp run_plan
assertPlanState successful
assertNone -p /software/items/prop2_new_init
assertNone -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init

# tc-04-3
# Applied source with Applied reference
# prop2 not defined for neither source nor reference
# Action: Update source with new property (prop2)
# Result: reference state is changed from Applied to Updated
#         Property added to reference item
assertState -p /software/items/prop2_new_repo Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo Applied

assertProperty /software/items/prop2_new_repo -o myprop1='orig'
assertPropertyUnset -p /software/items/prop2_new_repo -o myprop2
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop1='orig'
assertPropertyUnset -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop2

# Action:
# create_plan to invoke plugin update_model to change source property value
litp update -p /software/items/foo -o name='prop2_new_repo'
litp create_plan

# Resulting state
assertState -p /software/items/prop2_new_repo Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo Updated

assertProperty /software/items/prop2_new_repo -o myprop1='orig'
assertProperty /software/items/prop2_new_repo -o myprop2='new'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop1='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop2='new'

# Remove previous items and create source and reference items for next test case
runLitpScript ./misc/cleanup_overwritten.inc

# tc-04-4
# Applied source with Applied reference
# prop2 only defined for reference, not for the source item
# Action: Update source with new property (prop2)
# Result: reference state remains Applied
#         Property value (prop2) left unchanged for reference item
assertState -p /software/items/prop2_new_repo Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo Applied

assertProperty /software/items/prop2_new_repo -o myprop1='orig'
assertPropertyUnset -p /software/items/prop2_new_repo -o myprop2
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop1='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop2='local'

# Action:
# create_plan to invoke plugin update_model to change source property value
litp update -p /software/items/foo -o name='prop2_new_repo'
litp create_plan

# Resulting state
assertState -p /software/items/prop2_new_repo Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo Applied

assertProperty /software/items/prop2_new_repo -o myprop1='orig'
assertProperty /software/items/prop2_new_repo -o myprop2='new'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop1='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop2='local'

# Remove previous items and create source and reference items for next test case
runLitpScript ./misc/cleanup_not_overwritten.inc

# tc-04-5
# Updated source with Updated reference
# prop2 not defined for neither source nor reference
# Action: Update source with new property (prop2)
# Result: reference state remains Updated
#         Property added to reference item
litp update -p /software/items/prop2_new_repo -o myprop1='new_by_update'
assertState -p /software/items/prop2_new_repo Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo Updated

assertProperty /software/items/prop2_new_repo -o myprop1='new_by_update'
assertPropertyUnset -p /software/items/prop2_new_repo -o myprop2
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop1='new_by_update'
assertPropertyUnset -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop2

# Action:
# create_plan to invoke plugin update_model to change source property value
litp update -p /software/items/foo -o name='prop2_new_repo'
litp create_plan

# Resulting state
assertState -p /software/items/prop2_new_repo Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo Updated

assertProperty /software/items/prop2_new_repo -o myprop1='new_by_update'
assertProperty /software/items/prop2_new_repo -o myprop2='new'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop1='new_by_update'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop2='new'

# Remove previous items and create source and reference items for next test case
runLitpScript ./misc/cleanup_not_overwritten.inc

# tc-04-6
# Updated source with Updated reference
# local prop2 value updated for reference, prop2 not defined for the source item
# Action: Update source with new property (prop2)
# Result: reference state remains Updated
#         Property value (prop2) left unchanged for reference item
litp update -p /software/items/prop2_new_repo -o myprop1='new_by_update'
litp update -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop2='local_new'
assertState -p /software/items/prop2_new_repo Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo Updated

assertProperty /software/items/prop2_new_repo -o myprop1='new_by_update'
assertPropertyUnset -p /software/items/prop2_new_repo -o myprop2
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop1='new_by_update'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop2='local_new'

# Action:
# create_plan to invoke plugin update_model to change source property value
litp update -p /software/items/foo -o name='prop2_new_repo'
litp create_plan

# Resulting state
assertState -p /software/items/prop2_new_repo Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo Updated

assertProperty /software/items/prop2_new_repo -o myprop1='new_by_update'
assertProperty /software/items/prop2_new_repo -o myprop2='new'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop1='new_by_update'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop2='local_new'

# Remove previous items and create source and reference items for next test case
runLitpScript ./misc/cleanup_not_overwritten.inc

# tc-04-7
# Applied source with ForRemoval reference
# prop2 not defined for neither source nor reference
# Action: Update source with new property (prop2)
# Result: reference state is changed from Initial to Updated
#         Property added to reference item
litp remove -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo
assertState -p /software/items/prop2_new_repo Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo ForRemoval

assertProperty /software/items/prop2_new_repo -o myprop1='orig'
assertPropertyUnset -p /software/items/prop2_new_repo -o myprop2
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop1='orig'
assertPropertyUnset -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop2

# Action:
# create_plan to invoke plugin update_model to change source property value
litp update -p /software/items/foo -o name='prop2_new_repo'
litp create_plan

# Resulting state
assertState -p /software/items/prop2_new_repo Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo Updated

assertProperty /software/items/prop2_new_repo -o myprop1='orig'
assertProperty /software/items/prop2_new_repo -o myprop2='new'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop1='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop2='new'

# Remove previous items and create source and reference items for next test case
runLitpScript ./misc/cleanup_overwritten.inc

# tc-04-8
# Applied source with ForRemoval reference
# prop2 only defined for reference, not the source item
# Action: Update source with new property (prop2)
# Result: reference state remains ForRemoval
#         Property value (prop2) left unchanged for reference item
litp remove -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo
assertState -p /software/items/prop2_new_repo Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo ForRemoval

assertProperty /software/items/prop2_new_repo -o myprop1='orig'
assertPropertyUnset -p /software/items/prop2_new_repo -o myprop2
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop1='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop2='local'

# Action:
# create_plan to invoke plugin update_model to change source property value
litp update -p /software/items/foo -o name='prop2_new_repo'
litp create_plan

# Resulting state
assertState -p /software/items/prop2_new_repo Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo ForRemoval
assertProperty /software/items/prop2_new_repo -o myprop1='orig'
assertProperty /software/items/prop2_new_repo -o myprop2='new'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop1='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop2='local'

# Remove previous items and create source and reference items for next test case
runLitpScript ./misc/cleanup_overwritten.inc

# tc-04-9
# Applied source with ForRemoval reference
# local prop2 value updated for reference, prop2 not defined for the source item
# Action: Update source with new property (prop2)
# Result: reference state remains ForRemoval
#         Property value (prop2) left unchanged for reference item
litp update -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop2='local_new'
litp remove -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo
assertState -p /software/items/prop2_new_repo Applied
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo ForRemoval

assertProperty /software/items/prop2_new_repo -o myprop1='orig'
assertPropertyUnset -p /software/items/prop2_new_repo -o myprop2
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop1='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop2='local_new'

# Action:
# create_plan to invoke plugin update_model to change source property value
litp update -p /software/items/foo -o name='prop2_new_repo'
litp create_plan

# Resulting state
assertState -p /software/items/prop2_new_repo Updated
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo ForRemoval
assertProperty /software/items/prop2_new_repo -o myprop1='orig'
assertProperty /software/items/prop2_new_repo -o myprop2='new'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop1='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_repo -o myprop2='local_new'
