## Test Plugin API
## Purpose of this test is to check the reference state transition depending on 
## the items' previous state and actions taken on the source and reference.
## State transition is triggered by plugin when create_plan command is issued
## All test cases in this AT are variants of the following steps below.
## Variations: reference properties are either inherited from source or overwritten with local values
## and source property is either updated by plugin to a new value or to its original/applied value.
## Generic test cases steps:
## 1. Previous state Initial source with Initial reference (Same for all test cases)
## 2. Action: Update source property via plugin by invoking create_plan
##    (property value will vary per test case)
## 4. Result: Check reference state
##    (reference state will vary per test case)

# Prerequisite:
# Create a plugin that generates the ability to update a source property based on item name
# For example, if item name is 'prop1_new_init' then the plugin will update the 
# source item's property called 'myprop1' to the value 'new' if the item is in state Initial
# when create_plan is invoked
add-extensions ../../extensions/update_src_prop_extensions
add-plugins ../../plugins/update_src_prop_plugin

# Set up Model
runLitpScript ../../include/two_nodes.at
# foo item is used by plugin as a flag to control which source item is updated
litp create -p /software/items/foo -t mock-package -o name='foo' version=1

litp create -p /software/items/prop1_new_init -t myrepository -o name='prop1_new_init' myprop1='orig' myprop2='orig'
litp inherit -p /deployments/local/clusters/cluster1/nodes/node1/items/prop1_new_init -s /software/items/prop1_new_init \
    -o myprop2='local'

# tc-03-1
# Overwritten reference property (prop2)
# Update source with new property value (prop1)
# Result: reference state remains Initial
assertState -p /software/items/prop1_new_init Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop1_new_init Initial

assertProperty /software/items/prop1_new_init -o myprop1='orig'
assertProperty /software/items/prop1_new_init -o myprop2='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop1_new_init -o myprop1='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop1_new_init -o myprop2='local'

# Action:
# create_plan to invoke plugin update_model to change source property value
litp update -p /software/items/foo -o name='prop1_new_init'
litp create_plan

# Resulting state
assertState -p /software/items/prop1_new_init Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop1_new_init Initial

assertProperty /software/items/prop1_new_init -o myprop1='new'
assertProperty /software/items/prop1_new_init -o myprop2='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop1_new_init -o myprop1='new'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop1_new_init -o myprop2='local'

# Remove previous items and create source and reference items for next test case
litp remove -p /deployments/local/clusters/cluster1/nodes/node1/items/prop1_new_init
litp remove -p /software/items/prop1_new_init
litp create -p /software/items/prop1_orig_init -t myrepository -o name='prop1_orig_init' myprop1='orig' myprop2='orig'
litp inherit -p /deployments/local/clusters/cluster1/nodes/node1/items/prop1_orig_init -s /software/items/prop1_orig_init \
    -o myprop2='local'

# tc-03-2
# Overwritten reference property by update (prop2)
# Update source with existing property value (prop2)
# Result: reference state remains Initial
assertState -p /software/items/prop1_orig_init Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop1_orig_init Initial

assertProperty /software/items/prop1_orig_init -o myprop1='orig'
assertProperty /software/items/prop1_orig_init -o myprop2='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop1_orig_init -o myprop1='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop1_orig_init -o myprop2='local'

# Action:
# create_plan to invoke plugin update_model to change source property value
litp update -p /software/items/foo -o name='prop1_orig_init'
litp create_plan

# Resulting state
assertState -p /software/items/prop1_orig_init Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop1_orig_init Initial

assertProperty /software/items/prop1_orig_init -o myprop1='orig'
assertProperty /software/items/prop1_orig_init -o myprop2='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop1_orig_init -o myprop1='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop1_orig_init -o myprop2='local'

# Remove previous items and create source and reference items for next test case
litp remove -p /deployments/local/clusters/cluster1/nodes/node1/items/prop1_orig_init
litp remove -p /software/items/prop1_orig_init
litp create -p /software/items/prop2_new_init -t myrepository -o name='prop2_new_init' myprop1='orig' myprop2='orig'
litp inherit -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init -s /software/items/prop2_new_init \
    -o myprop2='local'

# tc-3-3
# Overwritten reference property (prop2)
# Update source with new property value (prop2)
# Result: reference state remains Initial
assertState -p /software/items/prop2_new_init Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init Initial

assertProperty /software/items/prop2_new_init -o myprop1='orig'
assertProperty /software/items/prop2_new_init -o myprop2='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init -o myprop1='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init -o myprop2='local'

# Action:
# create_plan to invoke plugin update_model to change source property value
litp update -p /software/items/foo -o name='prop2_new_init'
litp create_plan

# Resulting state
assertState -p /software/items/prop2_new_init Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init Initial

assertProperty /software/items/prop2_new_init -o myprop1='orig'
assertProperty /software/items/prop2_new_init -o myprop2='new'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init -o myprop1='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init -o myprop2='local'

# Remove previous items and create source and reference items for next test case
litp remove -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init
litp remove -p /software/items/prop2_new_init
litp create -p /software/items/prop2_orig_init -t myrepository -o name='prop2_orig_init' myprop1='orig' myprop2='orig'
litp inherit -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_orig_init -s /software/items/prop2_orig_init \
    -o myprop2='local'

# tc-3-4
# Overwritten reference property (prop2)
# Update source with existing property value (prop2)
# Result: reference state remains Initial
assertState -p /software/items/prop2_orig_init Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_orig_init Initial
assertProperty /software/items/prop2_orig_init -o myprop1='orig'
assertProperty /software/items/prop2_orig_init -o myprop2='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_orig_init -o myprop1='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_orig_init -o myprop2='local'

# Action:
# create_plan to invoke plugin update_model to change source property value
litp update -p /software/items/foo -o name='prop2_orig_init'
litp create_plan

# Resulting state
assertState -p /software/items/prop2_orig_init Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_orig_init Initial

assertProperty /software/items/prop2_orig_init -o myprop1='orig'
assertProperty /software/items/prop2_orig_init -o myprop2='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_orig_init -o myprop1='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_orig_init -o myprop2='local'

# Remove previous items and create source and reference items for next test case
litp remove -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_orig_init
litp remove -p /software/items/prop2_orig_init
litp create -p /software/items/prop2_new_init -t myrepository -o name='prop2_new_init' myprop1='orig' myprop2='orig'
litp inherit -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init -s /software/items/prop2_new_init \
    -o myprop2='local'

# tc-3-5
# Overwritten reference property by update (prop2)
# Update source with new property value (prop2)
# Result: reference state remains Initial
litp update -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init -o myprop2='local_new'
assertState -p /software/items/prop2_new_init Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init Initial

assertProperty /software/items/prop2_new_init -o myprop1='orig'
assertProperty /software/items/prop2_new_init -o myprop2='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init -o myprop1='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init -o myprop2='local_new'

# Action:
# create_plan to invoke plugin update_model to change source property value
litp update -p /software/items/foo -o name='prop2_new_init'
litp create_plan

# Resulting state
assertState -p /software/items/prop2_new_init Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init Initial

assertProperty /software/items/prop2_new_init -o myprop1='orig'
assertProperty /software/items/prop2_new_init -o myprop2='new'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init -o myprop1='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init -o myprop2='local_new'

# Remove previous items and create source and reference items for next test case
litp remove -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_new_init
litp remove -p /software/items/prop2_new_init
litp create -p /software/items/prop2_orig_init -t myrepository -o name='prop2_orig_init' myprop1='orig' myprop2='orig'
litp inherit -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_orig_init -s /software/items/prop2_orig_init \
    -o myprop2='local'

# tc-3-6
# Overwritten reference property by update (prop2)
# Update source with existing property value (prop2)
# Result: reference state remains Initial
litp update -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_orig_init -o myprop2='local_new'
assertState -p /software/items/prop2_orig_init Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_orig_init Initial

assertProperty /software/items/prop2_orig_init -o myprop1='orig'
assertProperty /software/items/prop2_orig_init -o myprop2='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_orig_init -o myprop1='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_orig_init -o myprop2='local_new'

# Action:
# create_plan to invoke plugin update_model to change source property value
litp update -p /software/items/foo -o name='prop2_orig_init'
litp create_plan

# Resulting state
assertState -p /software/items/prop2_orig_init Initial
assertState -p /deployments/local/clusters/cluster1/nodes/node1/items/prop2_orig_init Initial

assertProperty /software/items/prop2_orig_init -o myprop1='orig'
assertProperty /software/items/prop2_orig_init -o myprop2='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_orig_init -o myprop1='orig'
assertProperty /deployments/local/clusters/cluster1/nodes/node1/items/prop2_orig_init -o myprop2='local_new'
