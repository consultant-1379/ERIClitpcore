## test_17_p_replace_task_that_makes_dependency_redundant
## Description:
## Ensure that when a persisted task with a direct task-to-task dependency
## and another persisted task with a configTask dependency are replaced,
## then these task dependencies are removed from the manifest

## Prerequisite:
## Create a plug-in that generates persisted tasks

## Actions:
## 1. Create a model item that generates a persisted ConfigTask
##    with no dependency:
##    task1(foo1, bar1) (direct task-to-task dependency)-> task2(foo2, bar2)
##    task3(foo3, bar3) (configTask dependency) -> task4(foo4, bar4)
## 2. Create Plan
## 3. Run plan
## 4. Update model items so plug-in will generate a replacement task
##    with no dependencies defined to replace the persisted tasks, task1 and task3:
##    taskA(fooA, barA) replaces task1(foo1, bar1)
##    taskB(fooA, barA) replaces task3(foo3, bar3)
## 5. Create plan
## 6. Run plan
## 7. Check the replacement task exists in the manifest with no
##    dependencies defined

## Result:
## A persisted task with a ConfigTask dependency and a persisted task with
## a direct 'task-to-task' dependency
## can be replaced by a task

#Prerequisite:
#Create a plug-in that generates persisted tasks
add-plugins plugins/story10650_plugin
add-extensions extensions/story10650_extension

runLitpScript ../include/two_nodes.at

#1. Create a model item that generates a persisted ConfigTask
#   with the following dependency:
#   task1(foo1, bar1) (direct task-to-task dependency)-> task2(foo2, bar2)
#   task3(foo3, bar3) (configTask dependency) -> task4(foo4, bar4)
litp create -p /software/items/item1 -t story10650 -o name="tc17_foobar1"
litp inherit -s /software/items/item1 -p /deployments/local/clusters/cluster1/nodes/node1/items/item1

#2. Create Plan
litp create_plan

#3. Run plan
litp run_plan

# Check manifest is as expected
assertFileContents manifests/expected/tc17/initial.pp /opt/ericsson/nms/litp/etc/puppet/manifests/plugins/node1.pp

#4. Update model items so plug-in will generate a replacement task
#   with no dependencies defined to replace the persisted tasks, task1 and task3:
#   taskA(fooA, barA) replaces task1(foo1, bar1)
#   taskB(fooA, barA) replaces task3(foo3, bar3)
litp update -p /software/items/item1 -o name="tc17_foobar2"

#5. Create plan
litp create_plan

#6. Run plan
litp run_plan

#7. Check the replacement task exists in the manifest with no
#   dependencies defined
# Check manifest is as expected
assertFileContents manifests/expected/tc17/replaced.pp /opt/ericsson/nms/litp/etc/puppet/manifests/plugins/node1.pp
