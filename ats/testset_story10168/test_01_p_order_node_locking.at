#test_01_p_order_node_locking
#============================
#Description:
#Test that when "node_upgrade_ordering" is provided,
#the order given will be used for node ordering
#during upgrade

#Actions:
#Presequite:
#LITP installed and deployed with VCS clusters
#1. Create a new deployment
#2. Update the node ordering provided by the view "node_upgrade_ordering"
#3. Follow upgrade steps
#4. Create plan
#5. Check node ordering follows order returned by view
#6. Run plan and assert it ran successfully

#Result:
#Node order provided by the view "node_upgrade_ordering" is followed
#and the upgrade is successful

#1. Create a new deployment
#2. Update the node ordering provided by the view "node_upgrade_ordering"
#3. Follow upgrade steps
add-extensions ../plugins/dummy_10168
add-plugins ../plugins/dummy_10168
runLitpScript misc/create_multi_node_deployment.inc

litp update -p /deployments/litpcds_10168/clusters/cluster_1 -o ordering_behaviour=reverse

#4. Create plan
litp create_plan

#5. Check node ordering follows order returned by view
let __task_n1 ConfigTask c1-node1 foo bar /deployments/litpcds_10168/clusters/cluster_1/nodes/node1
let __task_n2 ConfigTask c1-node2 foo bar /deployments/litpcds_10168/clusters/cluster_1/nodes/node2
assertTaskBeforeTask __task_n2 __task_n1

#6. Run plan and assert it ran successfully
litp run_plan
assertPlanState successful
