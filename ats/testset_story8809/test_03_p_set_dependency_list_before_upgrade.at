# test_03_p_set_dependency_list_before_upgrade
# ============================================

# Description:
# Test that if the dependency_list is updated before the upgrade, the changes
# take affect on the upgrade

# Actions:
# 1. Create a deployment with multiple clusters
# 2. Update the "dependency_list" property with a particular cluster order
# 3. Follow upgrade steps
# 4. After upgrade plan is created, check that the tasks are ordered as per
# the order in the "dependency_list" property
# 5. Update the "dependency_list" property to reorder the clusters
# 6. Recreate the plan
# 7. After upgrade plan is created, check that the tasks are ordered as per
# the order in the "dependency_list" property
# 8. Run upgrade plan

# Results:
# Clusters are ordered as per the "dependency_list" property and the upgrade
# is successful

# 1. Create multi cluster deployment
add-extensions ../plugins/dummy_8809
add-plugins ../plugins/dummy_8809
runLitpScript misc/create_multi_cluster_deployment.inc

# 2. Update the "dependency_list" property with a particular cluster order

litp update -p /deployments/litpcds_8809/clusters/cluster_1 -o dependency_list='cluster_2,cluster_zulu'
litp update -p /deployments/litpcds_8809/clusters/cluster_2 -o dependency_list='cluster_3,cluster_zulu'
litp update -p /deployments/litpcds_8809/clusters/cluster_3 -o dependency_list='cluster_alpha'
litp update -p /deployments/litpcds_8809/clusters/cluster_alpha -o dependency_list=''
litp update -p /deployments/litpcds_8809/clusters/cluster_zulu -o dependency_list='cluster_no_ha'
litp update -p /deployments/litpcds_8809/clusters/cluster_no_ha -o dependency_list=''

# 3. Follow upgrade steps
litp create_plan

# 4. After upgrade plan is created, check that the tasks are ordered as per
# the order in the "dependency_list" property
#
# The dependency graph set in step #2, defines the following dependency
# classes
# - cluster_alpha, cluster_no_ha
# - cluster_3, cluster_zulu
# - cluster_2
# - cluster_1
#
# Applying lexicographic order on item_ids within each dependency class, the
# clusters are expected to be processed in the following sequence:
# - cluster_alpha
# - cluster_no_ha
# - cluster_3
# - cluster_zulu
# - cluster_2
# - cluster_1

let __task_n1_c1 ConfigTask c1-node1 foo foo1 /deployments/litpcds_8809/clusters/cluster_1/nodes/node1/items/ha_node_item
let __task_n2_c1 ConfigTask c1-node2 foo foo1 /deployments/litpcds_8809/clusters/cluster_1/nodes/node2/items/ha_node_item
let __cluster_task_c1 CallbackTask _mock_function /deployments/litpcds_8809/clusters/cluster_1

let __task_n1_c2 ConfigTask c2-node1 foo foo1 /deployments/litpcds_8809/clusters/cluster_2/nodes/node1/items/ha_node_item
let __task_n2_c2 ConfigTask c2-node2 foo foo1 /deployments/litpcds_8809/clusters/cluster_2/nodes/node2/items/ha_node_item
let __cluster_task_c2 CallbackTask _mock_function /deployments/litpcds_8809/clusters/cluster_2

let __task_n1_c3 ConfigTask c3-node1 foo foo1 /deployments/litpcds_8809/clusters/cluster_3/nodes/node1/items/ha_node_item
let __task_n2_c3 ConfigTask c3-node2 foo foo1 /deployments/litpcds_8809/clusters/cluster_3/nodes/node2/items/ha_node_item
let __cluster_task_c3 CallbackTask _mock_function /deployments/litpcds_8809/clusters/cluster_3

let __task_n1_ca ConfigTask ca-node1 foo foo1 /deployments/litpcds_8809/clusters/cluster_alpha/nodes/node1/items/ha_node_item
let __task_n2_ca ConfigTask ca-node2 foo foo1 /deployments/litpcds_8809/clusters/cluster_alpha/nodes/node2/items/ha_node_item
let __cluster_task_ca CallbackTask _mock_function /deployments/litpcds_8809/clusters/cluster_alpha

let __task_n1_c_no_ha ConfigTask c-no-ha-node1 foo foo1 /deployments/litpcds_8809/clusters/cluster_no_ha/nodes/node1/items/ha_node_item
let __task_n2_c_no_ha ConfigTask c-no-ha-node2 foo foo1 /deployments/litpcds_8809/clusters/cluster_no_ha/nodes/node2/items/ha_node_item
assertNoCallbackTask _mock_function /deployments/litpcds_8809/clusters/cluster_no_ha

let __task_n1_cz ConfigTask cz-node1 foo foo1 /deployments/litpcds_8809/clusters/cluster_zulu/nodes/node1/items/ha_node_item
let __task_n2_cz ConfigTask cz-node2 foo foo1 /deployments/litpcds_8809/clusters/cluster_zulu/nodes/node2/items/ha_node_item
let __cluster_task_cz CallbackTask _mock_function /deployments/litpcds_8809/clusters/cluster_zulu

assertTaskBeforeTask __task_n2_ca __cluster_task_ca
assertTaskBeforeTask __cluster_task_ca __task_n2_c_no_ha
assertTaskBeforeTask __task_n2_c_no_ha __task_n2_c3
assertTaskBeforeTask __task_n2_c3 __cluster_task_c3
assertTaskBeforeTask __cluster_task_c3 __task_n2_cz
assertTaskBeforeTask __task_n2_cz __cluster_task_cz
assertTaskBeforeTask __cluster_task_cz __task_n2_c2
assertTaskBeforeTask __task_n2_c2 __cluster_task_c2
assertTaskBeforeTask __cluster_task_c2 __task_n2_c1
assertTaskBeforeTask __task_n2_c1 __cluster_task_c1

# 5. Update the "dependency_list" property to reorder the clusters
litp update -p /deployments/litpcds_8809/clusters/cluster_1 -o dependency_list=''
litp update -p /deployments/litpcds_8809/clusters/cluster_2 -o dependency_list='cluster_1'
litp update -p /deployments/litpcds_8809/clusters/cluster_3 -o dependency_list='cluster_2'
litp update -p /deployments/litpcds_8809/clusters/cluster_alpha -o dependency_list='cluster_2,cluster_3'
litp update -p /deployments/litpcds_8809/clusters/cluster_zulu -o dependency_list=''
litp update -p /deployments/litpcds_8809/clusters/cluster_no_ha -o dependency_list=''

# 6. Recreate the plan
litp create_plan

# 7. After upgrade plan is created, check that the tasks are ordered as per
# the order in the "dependency_list" property
#
# The dependency graph set in step #5 defines the following dependency
# classes:
# - cluster_1
# - cluster_2
# - cluster_3
# - cluster_alpha
# The following clusters are *not* part of the dependency graph:
# - cluster_no_ha
# - cluster_zulu

assertTaskBeforeTask __task_n2_c1 __cluster_task_c1
assertTaskBeforeTask __cluster_task_c1 __task_n2_c2
assertTaskBeforeTask __task_n2_c2 __cluster_task_c2
assertTaskBeforeTask __cluster_task_c2 __task_n2_c3
assertTaskBeforeTask __task_n2_c3 __cluster_task_c3
assertTaskBeforeTask __cluster_task_c3 __task_n2_ca
assertTaskBeforeTask __task_n2_ca __task_n2_c_no_ha
assertTaskBeforeTask __task_n2_c_no_ha __task_n2_cz
assertTaskBeforeTask __task_n2_cz __cluster_task_cz

# 8. Run upgrade plan
litp run_plan
