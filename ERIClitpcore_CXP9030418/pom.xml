<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.ericsson.nms.litp</groupId>
  <artifactId>ERIClitpcore_CXP9030418</artifactId>
  <packaging>rpm</packaging>
  <name>[${project.parent.artifactId}] RPM module</name>
  <description>LITP core modules</description>
  <parent>
    <groupId>com.ericsson.nms.litp</groupId>
    <artifactId>ERIClitpcore</artifactId>
    <version>2.20.1-SNAPSHOT</version>
  </parent>
  <properties>
    <!-- publishes the rpm module to the ci portal -->
    <publish_artifact>true</publish_artifact>
    <bom_version>RELEASE</bom_version>
  </properties>
  <build>
    <plugins>
      <plugin>
        <groupId>org.tomdz.maven</groupId>
        <artifactId>sphinx-maven-plugin</artifactId>
        <version>1.0.1</version>
        <executions>
          <execution>
            <id>Initial download of Sphinx</id>
            <phase>initialize</phase>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>Build html files</id>
            <phase>process-resources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>doc/build_html.py</executable>
              <arguments>
                <argument>${drop}</argument>
                <argument>${project.version}</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>rpm-maven-plugin</artifactId>
        <extensions>true</extensions>
        <inherited>true</inherited>
        <configuration>
          <requires>
            <require>python &gt;= 2.7</require>
            <require>python2-crypto &gt;= 2.6.1</require>
            <require>python-paramiko &gt;= 1.7.5-2.1.el6</require>
            <require>python-setuptools &gt;= 0.6.10-3.el6</require>
            <require>python-argparse &gt;= 1.2.1</require>
            <require>python-routes &gt;= 2.5.1</require>
            <require>cobbler &gt;= 2.4.2</require>
            <require>pam-devel &gt;= 1.1.1</require>
            <require>CherryPy &gt;= 3.2.2</require>
            <require>pyOpenSSL &gt;= 17.2.0 </require>
            <require>facter &gt;= 2.4.6</require>
            <require>gettext &gt;= 0.17</require>
            <require>python-IPy &gt;= 0.75</require>
            <require>jsonpath &gt;= 0.54</require>
            <require>python-netaddr &gt;= 0.7.5-4.el6</require>
            <require>python-lxml &gt;= 2.2.3</require>
            <require>python-pampy &gt;= 0.1.4-3.1</require>
            <require>mcollective &gt;= 2.4.1</require>
            <require>mcollective-client &gt;= 2.4.1</require>
            <require>mcollective-common &gt;= 2.4.1</require>
            <require>mcollective-puppet-client &gt;= 1.6.0</require>
            <require>mcollective-puppet-common &gt;= 1.6.0</require>
            <require>mcollective-puppet-agent &gt;= 1.6.0</require>
            <require>mcollective-service-agent &gt;= 3.1.2</require>
            <require>mcollective-service-client &gt;= 3.1.2</require>
            <require>mcollective-service-common &gt;= 3.1.2</require>
            <require>mod_ssl</require>
            <!-- Puppet manager specific -->
            <require>puppet &gt;= 3.8.7</require>
            <require>puppetserver &gt;= 1.1.3</require>
            <require>EXTRlitprabbitmqserver_CXP9031043 &gt;= 1.5.1</require>
            <require>rabbitmq-server &gt;= 3.5.4</require>
            <require>ruby-augeas &gt;= 0.3.0</require>
            <require>rubygem-stomp &gt;= 1.2.2-1.el6</require>
            <require>rubygems &gt;= 1.3.7</require>
            <require>EXTRlitppuppetmodules_CXP9030419 &gt;= 1.20.1</require>
            <require>EXTRlitppuppetinifile_CXP9032828 &gt;= 1.1.1</require>
            <require>EXTRlitppuppetpostgresql_CXP9032827 &gt;= 2.2.3</require>
            <require>EXTRlitppythonalembic_CXP9032831 &gt;= 1.0.2</require>
            <require>EXTRlitppythonpsycopg2_CXP9032522 &gt;= 1.2.1</require>
            <require>EXTRlitppythonsqlalchemy_CXP9032518 &gt;= 1.0.2</require>
            <require>EXTRlitppuppetdb_CXP9032594 &gt;= 1.10.2</require>
            <require>EXTRlitppuppetdbterminus_CXP9032595 &gt;= 1.10.2</require>
            <require>EXTRlitppuppetpuppetdb_CXP9032830 &gt;= 2.2.3</require>
            <require>rh-postgresql96 &gt;= 3.0</require>
            <require>rh-postgresql96-postgresql-server &gt;= 9.6.10</require>
            <require>rh-postgresql96-postgresql-server-syspaths &gt;= 9.6.10</require>
            <require>rh-postgresql96-postgresql-syspaths &gt;= 9.6.10</require>
            <require>rh-postgresql96-postgresql-contrib &gt;= 9.6.10</require>
            <require>nc &gt;= 1.84</require>
            <require>curl &gt;= 7.19</require>
            <require>EXTRlitpcelery_CXP9032834 &gt;= 1.4.3</require>
          </requires>
          <!--
                        Additional mappings for RPM creation.
                        Since we want to use these in addition to those defined
                        in the integration-test POM, we need to use
                             "combine.children="append"
                        as an attribute.  Otherwise, these mappings would replace
                        those we inherit from the integration-test POM, rather than
                        adding to them.
                    -->
          <mappings combine.children="append">
            <mapping>
              <directory>/usr/local/bin</directory>
              <configuration>true</configuration>
              <directoryIncluded>false</directoryIncluded>
              <filemode>644</filemode>
              <sources>
                <source>
                  <location>../usr/local/bin/</location>
                  <includes>
                    <include>litpd.sh</include>
                  </includes>
                </source>
              </sources>
            </mapping>
            <mapping>
              <directory>/usr/local/lib/systemd/system/</directory>
              <configuration>true</configuration>
              <directoryIncluded>false</directoryIncluded>
              <filemode>644</filemode>
              <sources>
                <source>
                  <location>../usr/local/lib/systemd/system/</location>
                  <includes>
                    <include>litpd.service</include>
                  </includes>
                </source>
              </sources>
            </mapping>
            <mapping>
              <!-- LITP scripts -->
              <directory>${app.home}/bin</directory>
              <configuration>false</configuration>
              <sources>
                <source>
                  <location>../bin</location>
                </source>
              </sources>
            </mapping>
            <mapping>
              <!--
                Puppet config file - this overwrites the default
                puppet.conf installed by the puppet rpm.
                see postinstall.sh
              -->
              <directory>${app.home}/etc/puppet/</directory>
              <configuration>false</configuration>
              <sources>
                <source>
                  <location>../etc/puppet/</location>
                  <includes>
                    <include>puppet.conf</include>
                  </includes>
                </source>
              </sources>
            </mapping>
            <mapping>
              <!-- Puppet environment file -->
              <directory>${app.home}/etc/puppet/environments/production</directory>
              <configuration>false</configuration>
              <sources>
                <source>
                  <location>../etc/puppet/</location>
                  <includes>
                    <include>environment.conf</include>
                  </includes>
                </source>
              </sources>
            </mapping>
            <mapping>
              <directory>${app.home}/etc/sysconfig/</directory>
              <configuration>false</configuration>
              <sources>
                <source>
                  <location>../etc/sysconfig/</location>
                  <includes>
                    <include>puppet</include>
                  </includes>
                </source>
              </sources>
            </mapping>
            <mapping>
              <!-- Generic config files: /etc/*.conf -->
              <directory>/etc/</directory>
              <configuration>noreplace</configuration>
              <directoryIncluded>false</directoryIncluded>
              <sources>
                <source>
                  <location>../etc/</location>
                  <includes>
                    <include>*.conf</include>
                  </includes>
                  <excludes>
                    <exclude>litpd.conf</exclude>
                  </excludes>
                </source>
              </sources>
            </mapping>
            <mapping>
              <!-- /etc/litpd.conf config file-->
              <directory>/etc/</directory>
              <configuration>true</configuration>
              <directoryIncluded>false</directoryIncluded>
              <sources>
                <source>
                  <location>../etc/</location>
                  <includes>
                    <include>litpd.conf</include>
                  </includes>
                </source>
              </sources>
            </mapping>
            <!-- selinux policies -->
            <mapping>
              <directory>${app.home}/etc/selinux</directory>
              <configuration>false</configuration>
              <sources>
                <source>
                  <location>../selinux</location>
                  <includes>
                    <include>*.pp</include>
                  </includes>
                </source>
              </sources>
            </mapping>
            <mapping>
              <!-- daily cronjob -->
              <directory>/etc/cron.daily</directory>
              <configuration>false</configuration>
              <directoryIncluded>false</directoryIncluded>
              <sources>
                <source>
                  <location>../etc/cron.daily</location>
                  <includes>
                    <include>*</include>
                  </includes>
                </source>
              </sources>
            </mapping>
            <mapping>
              <!-- logrotate -->
              <directory>/etc/logrotate.d</directory>
              <configuration>false</configuration>
              <directoryIncluded>false</directoryIncluded>
              <filemode>644</filemode>
              <sources>
                <source>
                  <location>../etc/logrotate.d/</location>
                  <includes>
                    <include>*</include>
                  </includes>
                </source>
              </sources>
            </mapping>
            <mapping>
              <!-- celery configuration file -->
              <!-- used for transforming celery to systemd -->
              <directory>/etc/conf.d</directory>
              <directoryIncluded>false</directoryIncluded>
              <configuration>false</configuration>
              <filemode>644</filemode>
              <sources>
                <source>
                  <location>../etc/conf.d/celery</location>
                </source>
              </sources>
            </mapping>
            <mapping>
              <!-- celery configuration file -->
              <!-- used for generating celery pid and log dirs -->
              <directory>/etc/tmpfiles.d</directory>
              <directoryIncluded>false</directoryIncluded>
              <configuration>false</configuration>
              <filemode>644</filemode>
              <sources>
                <source>
                  <location>../etc/tmpfiles.d/celery.conf</location>
                </source>
              </sources>
            </mapping>
            <!-- puppet directories -->
            <mapping>
              <directory>${app.home}/etc/puppet/modules/litp</directory>
              <configuration>false</configuration>
              <directoryIncluded>true</directoryIncluded>
              <recurseDirectories>true</recurseDirectories>
              <filemode>750</filemode>
              <username>root</username>
              <groupname>puppet</groupname>
            </mapping>
            <mapping>
              <directory>${app.home}/etc/puppet/modules/mcollective_agents</directory>
              <configuration>false</configuration>
              <directoryIncluded>true</directoryIncluded>
              <recurseDirectories>true</recurseDirectories>
              <filemode>750</filemode>
              <username>root</username>
              <groupname>puppet</groupname>
            </mapping>
            <mapping>
              <directory>${app.home}/etc/puppet/modules/sshd</directory>
              <configuration>false</configuration>
              <directoryIncluded>true</directoryIncluded>
              <recurseDirectories>true</recurseDirectories>
              <filemode>750</filemode>
              <username>root</username>
              <groupname>puppet</groupname>
            </mapping>
            <mapping>
              <directory>${app.home}/etc/puppet/modules/yum</directory>
              <configuration>false</configuration>
              <directoryIncluded>true</directoryIncluded>
              <recurseDirectories>true</recurseDirectories>
              <filemode>750</filemode>
              <username>root</username>
              <groupname>puppet</groupname>
            </mapping>
            <!-- puppet files -->
            <mapping>
              <directory>${app.home}/etc/puppet/modules</directory>
              <configuration>false</configuration>
              <directoryIncluded>false</directoryIncluded>
              <filemode>640</filemode>
              <username>root</username>
              <groupname>puppet</groupname>
              <sources>
                <source>
                  <location>../puppet</location>
                  <excludes>
                    <exclude>README.txt</exclude>
                  </excludes>
                </source>
              </sources>
            </mapping>
            <mapping>
              <!-- litpmsdbpwd file permissions -->
              <directory>${app.home}/lib/litp/core</directory>
              <configuration>false</configuration>
              <directoryIncluded>false</directoryIncluded>
              <filemode>750</filemode>
              <sources>
                <source>
                  <location>../src/litp/core/</location>
                  <includes>
                    <include>litpmsdbpwd.py</include>
                  </includes>
                </source>
              </sources>
            </mapping>
            <mapping>
              <!-- litpmsdbpwd symlink -->
              <directory>/usr/bin</directory>
              <configuration>false</configuration>
              <sources>
                <softlinkSource>
                  <location>${app.home}/lib/litp/core/litpmsdbpwd.py</location>
                  <destination>litpmsdbpwd</destination>
                </softlinkSource>
              </sources>
            </mapping>
          </mappings>
          <triggers>
            <!-- The litpcrypt symlink needs to be recreated when an older version of ERIClitpcli is cleaned that claims ownership of that file -->
            <postRemoveTrigger>
              <script>ln -sf /opt/ericsson/nms/litp/lib/litp/core/litpcrypt.py /usr/bin/litpcrypt</script>
              <triggers>
                <trigger>ERIClitpcli_CXP9030420 &lt; 1.14.5</trigger>
              </triggers>
            </postRemoveTrigger>
            <!-- The litpcrypt symlink needs to be recreated when an older version of ERIClitpcli is installed that claims ownership of that file -->
            <installTrigger>
              <script>ln -sf /opt/ericsson/nms/litp/lib/litp/core/litpcrypt.py /usr/bin/litpcrypt</script>
              <triggers>
                <trigger>ERIClitpcli_CXP9030420 &lt; 1.14.5</trigger>
              </triggers>
            </installTrigger>
          </triggers>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>current-dep</id>
      <activation>
        <property>
          <name>!UsingLatest</name>
        </property>
      </activation>
      <properties>
        <litpatrunner_version>2.2.0</litpatrunner_version>
      </properties>
      <dependencies>
        <dependency>
          <groupId>com.ericsson.nms.litp</groupId>
          <artifactId>ERIClitpatrunner_CXP9030558</artifactId>
          <version>${litpatrunner_version}</version>
          <type>rpm</type>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>latest-dep</id>
      <properties>
        <UsingLatest>true</UsingLatest>
      </properties>
      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>com.ericsson.litp</groupId>
            <artifactId>ci-bom</artifactId>
            <version>${bom_version}</version>
            <type>pom</type>
            <scope>import</scope>
          </dependency>
        </dependencies>
      </dependencyManagement>
      <dependencies>
        <dependency>
          <groupId>com.ericsson.nms.litp</groupId>
          <artifactId>ERIClitpatrunner_CXP9030558</artifactId>
          <type>rpm</type>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>site_versioned</id>
      <distributionManagement>
        <site>
          <id>site</id>
          <name>Site</name>
          <url>${site.url}/ERIClitpcore/${project.version}</url>
        </site>
      </distributionManagement>
    </profile>
    <profile>
      <id>site_latest</id>
      <distributionManagement>
        <site>
          <id>site</id>
          <name>Site</name>
          <url>${site.url}/ERIClitpcore/latest</url>
        </site>
      </distributionManagement>
    </profile>
  </profiles>
</project>
