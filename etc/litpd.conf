[global]
server.socket_host: "0.0.0.0"
server.socket_port: 9999
response.headers.server: ''
dbase_root: "/var/lib/litp/core/model/"
server.ssl_module:'pyopenssl'
server.ssl_certificate:'/opt/ericsson/nms/litp/etc/ssl/litp_server.cert'
server.ssl_private_key:'/opt/ericsson/nms/litp/etc/ssl/litp_server.key'

dbase_last_known_link: "LAST_KNOWN_CONFIG"
backup_interval: 300
save_window: 2
backups_to_keep: 2

last_successful_plan_model: "LAST_SUCCESSFUL_PLAN_MODEL"

litp_socket_file: "/var/run/litpd/litpd.sock"

; Group which is allowed to access the litp_socket_file
litp_socket_file_group: "litp-access"

; Limit access to the socket connection
; to users belonging to the group list below
; (comma-separated list of groups)
; All users must belong to the litp_socket_file_group
; specified above as well
litp_socket_allowed_groups: "litp-access,root"

litp_root: "/opt/ericsson/nms/litp"

checker.check_skipped_app_config = False

; Timeout value, in seconds, for puppet phase.
; Valid value is integer: [0, 604800].
; 0 means do not time out a puppet phase and wait forever.
; Default value is 12 hours.
; puppet_phase_timeout = 43200
puppet_phase_timeout = 43200

; Puppet poll frequency in seconds, to check puppet is still alive.
; Valid value is integer: 0, [60, 3600].
; 0 means do not poll.
; Default value is 1 minute.
; puppet_poll_frequency = 60
puppet_poll_frequency = 60

; Puppet poll count number.
; Valid value is integer: [1, 1000].
; Default value is 15
; puppet_poll_count = 15
puppet_poll_count = 15

; The time (in seconds) that the Puppet manager waits for a successful MCO
; Puppet command.
; Valid value is integer: [300, 900].
; Default value is 10 minutes
; puppet_mco_timeout = 600
puppet_mco_timeout = 600

; Location for dot files created when
; cyclic dependencies conditions are found in plan creations
task_graph_save_location = "/var/log"

;Used in PostgreSQL connections
pg_hostname = {hostname}
pg_port = {port}

; PostgreSQL connection
sqlalchemy.url: "postgresql+psycopg2://litp@%(pg_hostname)s:%(pg_port)s/litp?sslmode=verify-full"

; PostgreSQL connection for litpmsdbpwd
sqlalchemy_pg.url: "postgresql+psycopg2://litp@%(pg_hostname)s:%(pg_port)s/postgres?sslmode=verify-full"

celery: { 'BROKER_URL': 'amqp://litp:ptil@localhost:5672/%%2flitp',
          'CELERY_RESULT_BACKEND': "db+postgresql+psycopg2://litp@%(pg_hostname)s:%(pg_port)s/litpcelery?sslmode=verify-full"}

