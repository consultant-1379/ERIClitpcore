# pylint: disable=E1101,C0103,C0111
# revision identifiers, used by Alembic.
revision = '11968cfd6155'
down_revision = '3c2efd86905b'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        'plans', sa.Column('next_phases', sa.UnicodeText(), nullable=True))
    op.add_column(
        'plans', sa.Column('required_phases', sa.UnicodeText(), nullable=True))
    # Note Plan.initialize_from_db handles population of
    # next_phases/require_phases in an upgrade scenario by calling
    # build_phase_dependencies() if either or both are nulls
    ### end Alembic commands ###


def downgrade():
    raise NotImplementedError("No downgrades.")
    # pylint: disable=W0101
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('plans', 'required_phases')
    op.drop_column('plans', 'next_phases')
    ### end Alembic commands ###
